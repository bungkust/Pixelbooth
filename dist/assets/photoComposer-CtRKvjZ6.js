import{f as W}from"./index-8iitMcyj.js";let g=null;async function F(){if(g)return g;try{const t=(await(await fetch("/config.txt")).text()).split(`
`);let e="Pixel Booth",c="2025";for(const o of t){const s=o.trim();s.startsWith("MAIN_TEXT=")?e=s.substring(10).trim():s.startsWith("SUB_TEXT=")&&(c=s.substring(9).trim())}return g={mainText:e,subText:c},g}catch(l){return console.warn("Failed to load config.txt, using defaults:",l),g={mainText:"Pixel Booth",subText:"2025"},g}}async function $(l,p,t){console.log("Composing result...");const e=await F();console.log("Config loaded:",e);const c=1024,o=24,s=16,y=c-o*2,d=y,x=80,h=e.mainText&&e.mainText.trim()||e.subText&&e.subText.trim()?120:0;let T=o+h+d+x+o,C=[];if(t.layout==="vertical"){T=o+h+d*t.photoCount+s*(t.photoCount-1)+x+o;for(let n=0;n<t.photoCount;n++)C.push({x:o,y:o+h+n*(d+s)})}else if(t.layout==="horizontal"){const n=(c-o*2-s*(t.photoCount-1))/t.photoCount;T=o+h+n+x+o;for(let r=0;r<t.photoCount;r++)C.push({x:o+r*(n+s),y:o+h})}else if(t.layout==="grid"){const n=t.photoCount===4?2:t.photoCount===6?3:2,r=Math.ceil(t.photoCount/n),f=(c-o*2-s*(n-1))/n,u=f;T=o+h+u*r+s*(r-1)+x+o;for(let a=0;a<t.photoCount;a++){const E=a%n,w=Math.floor(a/n);C.push({x:o+E*(f+s),y:o+h+w*(u+s)})}}const i=l.createGraphics(c,T);if(i.background(255),e.mainText&&e.mainText.trim()||e.subText&&e.subText.trim()){i.fill(0),i.noStroke(),i.textAlign(l.CENTER,l.CENTER),i.textFont("monospace");const n=o+h/2;e.mainText&&e.mainText.trim()&&(i.textSize(48),i.text(e.mainText.trim(),c/2,n-15)),e.subText&&e.subText.trim()&&(i.textSize(32),i.text(e.subText.trim(),c/2,n+25))}for(let n=0;n<t.photoCount;n++){const r=C[n];console.log(`Applying FS dither to frame ${n}...`);const f=W(l,p[n]);if(console.log(`Dither complete for frame ${n}.`),t.layout==="horizontal"){const u=(c-o*2-s*(t.photoCount-1))/t.photoCount;i.image(f,r.x,r.y,u,u)}else if(t.layout==="grid"){const u=t.photoCount===4?2:t.photoCount===6?3:2,a=(c-o*2-s*(u-1))/u;i.image(f,r.x,r.y,a,a)}else i.image(f,r.x,r.y,y,d)}const S=T-o-x;i.fill(0),i.noStroke(),i.textAlign(l.CENTER,l.CENTER),i.textFont("monospace"),i.textSize(28);const m=new Date,b=`PIXEL BOOTH // ${`${m.getFullYear()}.${(m.getMonth()+1).toString().padStart(2,"0")}.${m.getDate().toString().padStart(2,"0")}`}`;return i.text(b,c/2,S+x/2),console.log("Composing complete. Ready for review."),i}export{$ as composeResult};
